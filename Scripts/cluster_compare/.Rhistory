orig <- orig[, -1]
comp
id_orig <- as.character(id_orig[,1])
id_comp <- as.character(id_comp[,1])
# make colnames of cluster ids
colnames(orig) <- id_orig
colnames(comp) <- id_comp
orig
colnames(orig) <- id_orig
colnames(comp) <- id_comp
# find intersections
intersect <- orig[colnames(orig) %in% colnames(comp)]
intersect
intersect <- as.data.frame(t(intersect))
colnames(intersect) <- 'orig_score'
comp <- as.data.frame(t(comp))
colnames(comp) <- 'comp_score'
intersect
comp
joint_scores <- cbind(intersect, comp)
joint_scores$match <- ifelse(joint_scores$orig_score == joint_scores$comp_score, TRUE, FALSE)
joint_scores
summary(joint_scores$match)
homeFolder <- "/home/benbrew/hpf/largeprojects/agoldenb/ben"
projectFolder <- paste(homeFolder, "Projects/SNF/NM_2015", sep="/")
testFolder <- paste(projectFolder, "Scripts",
"06_Two_Thousand_Features",
"cluster_complete_data", sep="/")
dataFolder <- paste(projectFolder, 'Data', sep = '/')
resultsFolder <- paste(testFolder, "Results/labels", sep="/")
resultsFolder
kirc_hier <- read.table(paste0(resultsFolder,'/2_1.txt'))
resultsFolder <- paste(testFolder, "Results/Labels", sep="/")
# hierarchical, icluster, snf
# brca, kirc, lihc, luad
source(paste(projectFolder, "Scripts/loadFunctions.R", sep="/"))
kirc_hier <- read.table(paste0(resultsFolder,'/2_1.txt'))
kirc_iclus <- read.table(paste0(resultsFolder,'/2_2.txt'))
kirc_snf <- read.table(paste0(resultsFolder,'/2_3.txt'))
kirc_hier
kirc_hier <- t(read.table(paste0(resultsFolder,'/2_1.txt')))
kirc_hier
kirc_iclus <- t(read.table(paste0(resultsFolder,'/2_2.txt')))
kirc_snf <- t(read.table(paste0(resultsFolder,'/2_3.txt')))
View(kirc_snf)
kirc_hier$type <- 'hier'
kirc_hier <- t(read.table(paste0(resultsFolder,'/2_1.txt')))
kirc_iclus <- t(read.table(paste0(resultsFolder,'/2_2.txt')))
kirc_snf <- t(read.table(paste0(resultsFolder,'/2_3.txt')))
# add indicator to each label set
kirc_hier$type <- 1
kirc_hier <- t(read.table(paste0(resultsFolder,'/2_1.txt')))
kirc_iclus <- t(read.table(paste0(resultsFolder,'/2_2.txt')))
kirc_snf <- t(read.table(paste0(resultsFolder,'/2_3.txt')))
# add indicator to each label set
kirc_hier$type <- factor('hier')
kirc_hier <- t(read.table(paste0(resultsFolder,'/2_1.txt')))
kirc_iclus <- t(read.table(paste0(resultsFolder,'/2_2.txt')))
kirc_snf <- t(read.table(paste0(resultsFolder,'/2_3.txt')))
# add indicator to each label set
kirc_hier$type <- factor(c('hier'))
kirc_hier$type <- rep('hier', nrow(kirc_hier))
?rep
nrow(kirc_hier)
kirc_hier <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_1.txt'))))
kirc_iclus <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_2.txt'))))
kirc_snf <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_3.txt'))))
kirc_hier$type <- 'hier'
kirc_iclus$type <- 'iclus'
kirc_snf$type <- 'snf'
View(kirc_snf)
id_comp <- read.table('ids_complete')
id_comp <- read.table('ids_complete')
colnames(kirc_hier)[1] <- id_comp
View(kirc_hier)
id_comp
kirc_hier <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_1.txt'))))
kirc_iclus <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_2.txt'))))
kirc_snf <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_3.txt'))))
# add indicator to each label set
kirc_hier$type <- 'hier'
kirc_iclus$type <- 'iclus'
kirc_hier <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_1.txt'))))
View(kirc_hier)
View(kirc_hier)
kirc_hier <- cbind(kirc_hier, id_comp)
View(kirc_hier)
kirc_iclus <- cbind(kirc_iclus, id_comp)
kirc_snf <- cbind(kirc_snf, id_comp)
View(kirc_snf)
# Load methylation
# Load the data
cancer <- 'KIRC'
fileName <- paste(cancer, fileSuffix = 'methyl_450.txt', sep="_")
filePath <- paste(dataFolder, fileName,
sep="/")
methyl_450 <- read.delim(filePath, nrow = 10)
# extract the colum names from methyl_27
col_names_450 <- as.character(colnames(methyl_450))
################################################# for 450
#keep 1, 2, 3, 6 elements of each split
#split <- strsplit(sub_dat, 'X')
# last_split <- lapply(split, function(x) x[length(x)])
# colnames(data) <- unlist(last_split)
split_450 <- strsplit(col_names_450, '.', fixed = TRUE)
take_split_450 <- lapply(split_450, function(x) x[c(1:3,6 )])
data_frame_split_450 <- do.call('rbind', take_split_450)
id_batch_450 <- apply(data_frame_split_450[,1:3], 1, function(x) paste(x, collapse = '_'))
# now just split 1:3 together separate from 4
id_batch_data_450 <- cbind(id_batch_450, data_frame_split_450[, 4])
# id_batch_data_450[, 2] <- apply(id_batch_data_450[,2:4], 1, function(x) paste(x, collapse = '_'))
# id_batch_data_450 <- id_batch_data_450[, -c(3:4)]
id_batch_data_450 <- as.data.frame(id_batch_data_450)
names(id_batch_data_450) <- c('id', 'batch')
id_batch_data_450 <-id_batch_data_450[-1,]
rownames(id_batch_data_450) <- NULL
# drop duplicates and and make lowercase
id_batch_data_450 <- id_batch_data_450[!duplicated(id_batch_data_450$id),]
# transform patient IDs to the clinical ID format
transform_id_format <- function(x){
x <- substr(x, 1, 12)
x <- gsub('.', '-', x, fixed = TRUE)
x <- tolower(x)
return(x)
}
id_batch_data_450[,1] <- transform_id_format(id_batch_data_450[,1])
id_batch_data_450
kirc_hier
kirc_hier[ ,2] <- transform_id_format(kirc_hier[, 2])
View(kirc_hier)
kirc_iclus[ ,2] <- transform_id_format(kirc_iclus[, 2])
kirc_snf[ ,2] <- transform_id_format(kirc_snf[, 2])
id_batch_data_450[,1] <- transform_id_format(id_batch_data_450[,1])
kirc_hier[ ,2] <- transform_id_format(kirc_hier[, 2])
kirc_iclus[ ,2] <- transform_id_format(kirc_iclus[, 2])
kirc_snf[ ,2] <- transform_id_format(kirc_snf[, 2])
View(kirc_snf)
id_batch_data_450
nrow(id_batch_data_450)
nrow(kirc_hier)
kirc_hier
names(kirc_hier)
inner_join(kirc_hier, id_batch_data_450, by = c('x' = 'id'))
names(transform_id_format)
id_batch_data_450$id
View(kirc_hier)
View(id_batch_data_450)
id_batch_data_450$id <- gsub('_', '-', id_batch_data_450$id)
inner_join(kirc_hier, id_batch_data_450, by = c('x' = 'id'))
kirc_hier <- inner_join(kirc_hier, id_batch_data_450, by = c('x' = 'id'))
kirc_snf <- inner_join(kirc_snf, id_batch_data_450, by = c('x' = 'id'))
View(kirc_snf)
View(kirc_snf)
kirc_hier$x <- NULL
kirc_iclus$x <- NULL
kirc_snf$x <- NULL
names(kirc_snf)
kirc_hier <- kirc_hier %>%
group_by(V1) %>%
summarise_each(funs(mean))
View(kirc_hier)
library(dplyr)
# Initialize folders
homeFolder <- "/home/benbrew/hpf/largeprojects/agoldenb/ben"
projectFolder <- paste(homeFolder, "Projects/SNF/NM_2015", sep="/")
testFolder <- paste(projectFolder, "Scripts",
"06_Two_Thousand_Features",
"cluster_complete_data", sep="/")
dataFolder <- paste(projectFolder, 'Data', sep = '/')
resultsFolder <- paste(testFolder, "Results/Labels", sep="/")
# hierarchical, icluster, snf
# brca, kirc, lihc, luad
source(paste(projectFolder, "Scripts/loadFunctions.R", sep="/"))
# load cluster complete data labels for each clustering method
kirc_hier <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_1.txt'))))
kirc_iclus <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_2.txt'))))
kirc_snf <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_3.txt'))))
kirc_hier$type <- 'hier'
kirc_iclus$type <- 'iclus'
kirc_snf$type <- 'snf'
# read in ids and bind them
id_comp <- read.table('ids_complete')
kirc_hier <- cbind(kirc_hier, id_comp)
kirc_iclus <- cbind(kirc_iclus, id_comp)
kirc_snf <- cbind(kirc_snf, id_comp)
# Load methylation
# Load the data
cancer <- 'KIRC'
fileName <- paste(cancer, fileSuffix = 'methyl_450.txt', sep="_")
filePath <- paste(dataFolder, fileName,
sep="/")
methyl_450 <- read.delim(filePath, nrow = 10)
# extract the colum names from methyl_27
col_names_450 <- as.character(colnames(methyl_450))
################################################# for 450
#keep 1, 2, 3, 6 elements of each split
#split <- strsplit(sub_dat, 'X')
# last_split <- lapply(split, function(x) x[length(x)])
# colnames(data) <- unlist(last_split)
split_450 <- strsplit(col_names_450, '.', fixed = TRUE)
take_split_450 <- lapply(split_450, function(x) x[c(1:3,6 )])
data_frame_split_450 <- do.call('rbind', take_split_450)
id_batch_450 <- apply(data_frame_split_450[,1:3], 1, function(x) paste(x, collapse = '_'))
# now just split 1:3 together separate from 4
id_batch_data_450 <- cbind(id_batch_450, data_frame_split_450[, 4])
# id_batch_data_450[, 2] <- apply(id_batch_data_450[,2:4], 1, function(x) paste(x, collapse = '_'))
# id_batch_data_450 <- id_batch_data_450[, -c(3:4)]
id_batch_data_450 <- as.data.frame(id_batch_data_450)
names(id_batch_data_450) <- c('id', 'batch')
id_batch_data_450 <-id_batch_data_450[-1,]
rownames(id_batch_data_450) <- NULL
# drop duplicates and and make lowercase
id_batch_data_450 <- id_batch_data_450[!duplicated(id_batch_data_450$id),]
# transform patient IDs to the clinical ID format
transform_id_format <- function(x){
x <- substr(x, 1, 12)
x <- gsub('.', '-', x, fixed = TRUE)
x <- tolower(x)
return(x)
}
id_batch_data_450[,1] <- transform_id_format(id_batch_data_450[,1])
id_batch_data_450$id <- gsub('_', '-', id_batch_data_450$id)
kirc_hier[ ,2] <- transform_id_format(kirc_hier[, 2])
kirc_iclus[ ,2] <- transform_id_format(kirc_iclus[, 2])
kirc_snf[ ,2] <- transform_id_format(kirc_snf[, 2])
kirc_hier <- inner_join(kirc_hier, id_batch_data_450, by = c('x' = 'id'))
kirc_iclus <- inner_join(kirc_iclus, id_batch_data_450, by = c('x' = 'id'))
kirc_snf <- inner_join(kirc_snf, id_batch_data_450, by = c('x' = 'id'))
str(kirc_snf$batch)
temp <- kirc_hier %>%
group_by(V1) %>%
summarise_each(funs(sum))
View(temp)
kirc_hier
library(dplyr)
# Initialize folders
homeFolder <- "/home/benbrew/hpf/largeprojects/agoldenb/ben"
projectFolder <- paste(homeFolder, "Projects/SNF/NM_2015", sep="/")
testFolder <- paste(projectFolder, "Scripts",
"06_Two_Thousand_Features",
"cluster_complete_data", sep="/")
dataFolder <- paste(projectFolder, 'Data', sep = '/')
resultsFolder <- paste(testFolder, "Results/Labels", sep="/")
# hierarchical, icluster, snf
# brca, kirc, lihc, luad
source(paste(projectFolder, "Scripts/loadFunctions.R", sep="/"))
# load cluster complete data labels for each clustering method
kirc_hier <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_1.txt'))))
kirc_iclus <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_2.txt'))))
kirc_snf <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_3.txt'))))
# add indicator to each label set
kirc_hier$type <- 'hier'
kirc_iclus$type <- 'iclus'
kirc_snf$type <- 'snf'
id_comp <- read.table('ids_complete')
kirc_hier <- cbind(kirc_hier, id_comp)
kirc_iclus <- cbind(kirc_iclus, id_comp)
kirc_snf <- cbind(kirc_snf, id_comp)
# Load methylation
# Load the data
cancer <- 'KIRC'
fileName <- paste(cancer, fileSuffix = 'methyl_450.txt', sep="_")
filePath <- paste(dataFolder, fileName,
sep="/")
methyl_450 <- read.delim(filePath, nrow = 10)
# extract the colum names from methyl_27
col_names_450 <- as.character(colnames(methyl_450))
################################################# for 450
#keep 1, 2, 3, 6 elements of each split
#split <- strsplit(sub_dat, 'X')
# last_split <- lapply(split, function(x) x[length(x)])
# colnames(data) <- unlist(last_split)
split_450 <- strsplit(col_names_450, '.', fixed = TRUE)
take_split_450 <- lapply(split_450, function(x) x[c(1:3,6 )])
data_frame_split_450 <- do.call('rbind', take_split_450)
id_batch_450 <- apply(data_frame_split_450[,1:3], 1, function(x) paste(x, collapse = '_'))
# now just split 1:3 together separate from 4
id_batch_data_450 <- cbind(id_batch_450, data_frame_split_450[, 4])
# id_batch_data_450[, 2] <- apply(id_batch_data_450[,2:4], 1, function(x) paste(x, collapse = '_'))
# id_batch_data_450 <- id_batch_data_450[, -c(3:4)]
id_batch_data_450 <- as.data.frame(id_batch_data_450)
names(id_batch_data_450) <- c('id', 'batch')
id_batch_data_450 <-id_batch_data_450[-1,]
rownames(id_batch_data_450) <- NULL
id_batch_data_450 <- id_batch_data_450[!duplicated(id_batch_data_450$id),]
# transform patient IDs to the clinical ID format
transform_id_format <- function(x){
x <- substr(x, 1, 12)
x <- gsub('.', '-', x, fixed = TRUE)
x <- tolower(x)
return(x)
}
id_batch_data_450[,1] <- transform_id_format(id_batch_data_450[,1])
id_batch_data_450$id <- gsub('_', '-', id_batch_data_450$id)
kirc_hier[ ,2] <- transform_id_format(kirc_hier[, 2])
kirc_iclus[ ,2] <- transform_id_format(kirc_iclus[, 2])
kirc_snf[ ,2] <- transform_id_format(kirc_snf[, 2])
kirc_hier <- inner_join(kirc_hier, id_batch_data_450, by = c('x' = 'id'))
library(dplyr)
# Initialize folders
homeFolder <- "/home/benbrew/hpf/largeprojects/agoldenb/ben"
projectFolder <- paste(homeFolder, "Projects/SNF/NM_2015", sep="/")
testFolder <- paste(projectFolder, "Scripts",
"06_Two_Thousand_Features",
"cluster_complete_data", sep="/")
dataFolder <- paste(projectFolder, 'Data', sep = '/')
resultsFolder <- paste(testFolder, "Results/Labels", sep="/")
# hierarchical, icluster, snf
# brca, kirc, lihc, luad
source(paste(projectFolder, "Scripts/loadFunctions.R", sep="/"))
# load cluster complete data labels for each clustering method
kirc_hier <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_1.txt'))))
kirc_iclus <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_2.txt'))))
kirc_snf <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_3.txt'))))
# add indicator to each label set
kirc_hier$type <- 'hier'
kirc_iclus$type <- 'iclus'
kirc_snf$type <- 'snf'
# read in ids and bind them
id_comp <- read.table('ids_complete')
kirc_hier <- cbind(kirc_hier, id_comp)
kirc_iclus <- cbind(kirc_iclus, id_comp)
kirc_snf <- cbind(kirc_snf, id_comp)
# Load methylation
# Load the data
cancer <- 'KIRC'
fileName <- paste(cancer, fileSuffix = 'methyl_450.txt', sep="_")
filePath <- paste(dataFolder, fileName,
sep="/")
methyl_450 <- read.delim(filePath, nrow = 10)
# extract the colum names from methyl_27
col_names_450 <- as.character(colnames(methyl_450))
################################################# for 450
#keep 1, 2, 3, 6 elements of each split
#split <- strsplit(sub_dat, 'X')
# last_split <- lapply(split, function(x) x[length(x)])
# colnames(data) <- unlist(last_split)
split_450 <- strsplit(col_names_450, '.', fixed = TRUE)
take_split_450 <- lapply(split_450, function(x) x[c(1:3,6 )])
data_frame_split_450 <- do.call('rbind', take_split_450)
id_batch_450 <- apply(data_frame_split_450[,1:3], 1, function(x) paste(x, collapse = '_'))
# now just split 1:3 together separate from 4
id_batch_data_450 <- cbind(id_batch_450, data_frame_split_450[, 4])
# id_batch_data_450[, 2] <- apply(id_batch_data_450[,2:4], 1, function(x) paste(x, collapse = '_'))
# id_batch_data_450 <- id_batch_data_450[, -c(3:4)]
id_batch_data_450 <- as.data.frame(id_batch_data_450)
names(id_batch_data_450) <- c('id', 'batch')
id_batch_data_450 <-id_batch_data_450[-1,]
rownames(id_batch_data_450) <- NULL
# drop duplicates and and make lowercase
id_batch_data_450 <- id_batch_data_450[!duplicated(id_batch_data_450$id),]
# transform patient IDs to the clinical ID format
transform_id_format <- function(x){
x <- substr(x, 1, 12)
x <- gsub('.', '-', x, fixed = TRUE)
x <- tolower(x)
return(x)
}
id_batch_data_450[,1] <- transform_id_format(id_batch_data_450[,1])
id_batch_data_450$id <- gsub('_', '-', id_batch_data_450$id)
id_batch_data_450$id
kirc_hier$x
id_batch_data_450[,1] <- transform_id_format(id_batch_data_450[,1])
id_batch_data_450$id <- gsub('_', '-', id_batch_data_450$id)
kirc_hier[ ,2] <- transform_id_format(kirc_hier[, 2])
kirc_iclus[ ,2] <- transform_id_format(kirc_iclus[, 2])
kirc_snf[ ,2] <- transform_id_format(kirc_snf[, 2])
kirc_hier <- inner_join(kirc_hier, id_batch_data_450, by = c('x' = 'id'))
kirc_iclus <- inner_join(kirc_iclus, id_batch_data_450, by = c('x' = 'id'))
kirc_snf <- inner_join(kirc_snf, id_batch_data_450, by = c('x' = 'id'))
library(dplyr)
# Initialize folders
homeFolder <- "/home/benbrew/hpf/largeprojects/agoldenb/ben"
projectFolder <- paste(homeFolder, "Projects/SNF/NM_2015", sep="/")
testFolder <- paste(projectFolder, "Scripts",
"06_Two_Thousand_Features",
"cluster_complete_data", sep="/")
dataFolder <- paste(projectFolder, 'Data', sep = '/')
resultsFolder <- paste(testFolder, "Results/Labels", sep="/")
# hierarchical, icluster, snf
# brca, kirc, lihc, luad
source(paste(projectFolder, "Scripts/loadFunctions.R", sep="/"))
# load cluster complete data labels for each clustering method
kirc_hier <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_1.txt'))))
kirc_iclus <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_2.txt'))))
kirc_snf <- as.data.frame(t(read.table(paste0(resultsFolder,'/2_3.txt'))))
# add indicator to each label set
kirc_hier$type <- 'hier'
kirc_iclus$type <- 'iclus'
kirc_snf$type <- 'snf'
# read in ids and bind them
id_comp <- read.table('ids_complete')
kirc_hier <- cbind(kirc_hier, id_comp)
kirc_iclus <- cbind(kirc_iclus, id_comp)
kirc_snf <- cbind(kirc_snf, id_comp)
# Load methylation
# Load the data
cancer <- 'KIRC'
fileName <- paste(cancer, fileSuffix = 'methyl_450.txt', sep="_")
filePath <- paste(dataFolder, fileName,
sep="/")
methyl_450 <- read.delim(filePath, nrow = 10)
# extract the colum names from methyl_27
col_names_450 <- as.character(colnames(methyl_450))
################################################# for 450
#keep 1, 2, 3, 6 elements of each split
#split <- strsplit(sub_dat, 'X')
# last_split <- lapply(split, function(x) x[length(x)])
# colnames(data) <- unlist(last_split)
split_450 <- strsplit(col_names_450, '.', fixed = TRUE)
take_split_450 <- lapply(split_450, function(x) x[c(1:3,6 )])
data_frame_split_450 <- do.call('rbind', take_split_450)
id_batch_450 <- apply(data_frame_split_450[,1:3], 1, function(x) paste(x, collapse = '_'))
# now just split 1:3 together separate from 4
id_batch_data_450 <- cbind(id_batch_450, data_frame_split_450[, 4])
# id_batch_data_450[, 2] <- apply(id_batch_data_450[,2:4], 1, function(x) paste(x, collapse = '_'))
# id_batch_data_450 <- id_batch_data_450[, -c(3:4)]
id_batch_data_450 <- as.data.frame(id_batch_data_450)
names(id_batch_data_450) <- c('id', 'batch')
id_batch_data_450 <-id_batch_data_450[-1,]
rownames(id_batch_data_450) <- NULL
# drop duplicates and and make lowercase
id_batch_data_450 <- id_batch_data_450[!duplicated(id_batch_data_450$id),]
# transform patient IDs to the clinical ID format
transform_id_format <- function(x){
x <- substr(x, 1, 12)
x <- gsub('.', '-', x, fixed = TRUE)
x <- tolower(x)
return(x)
}
id_batch_data_450[,1] <- transform_id_format(id_batch_data_450[,1])
id_batch_data_450$id <- gsub('_', '-', id_batch_data_450$id)
kirc_hier[ ,2] <- transform_id_format(kirc_hier[, 2])
kirc_iclus[ ,2] <- transform_id_format(kirc_iclus[, 2])
kirc_snf[ ,2] <- transform_id_format(kirc_snf[, 2])
View(kirc_snf)
kirc_hier[ ,3] <- transform_id_format(kirc_hier[, 3])
kirc_iclus[ ,3] <- transform_id_format(kirc_iclus[, 3])
kirc_snf[ ,3] <- transform_id_format(kirc_snf[, 3])
View(kirc_hier)
kirc_hier <- inner_join(kirc_hier, id_batch_data_450, by = c('x' = 'id'))
kirc_iclus <- inner_join(kirc_iclus, id_batch_data_450, by = c('x' = 'id'))
kirc_snf <- inner_join(kirc_snf, id_batch_data_450, by = c('x' = 'id'))
temp <- kirc_hier %>%
group_by(V1) %>%
summarise_each(funs(sum))
str(kirc_hier)
temp <- kirc_hier[,c(1,4)] %>%
group_by(V1) %>%
summarise_each(funs(sum))
summary(kirc_hier)
summary(kirc_hier$batch)
temp <- kirc_hier %>%
group_by(V1) %>%
summarise(batch_1275 = sum(batch == '1275'),
batch_1418 = sum(batch == '1418'),
batch_1424 = sum(batch == '1424'),
batch_1500 = sum(batch == '1500'),
batch_1536 = sum(batch == '1536'),
batch_1670 = sum(batch == '1670'),
batch_A264 = sum(batch == 'A264'),
batch_A27A = sum(batch == 'A27A'),
batch_A33L = sum(batch == 'A33L'),
batch_A36Y= sum(batch == 'A36Y'),
batch_A39G = sum(batch == 'A39G'))
View(temp)
summary(kirc_snf$batch)
kirc_snf <- kirc_snf %>%
group_by(V1) %>%
summarise(batch_1275 = sum(batch == '1275'),
batch_1418 = sum(batch == '1418'),
batch_1424 = sum(batch == '1424'),
batch_1500 = sum(batch == '1500'),
batch_1536 = sum(batch == '1536'),
batch_1670 = sum(batch == '1670'),
batch_A264 = sum(batch == 'A264'),
batch_A27A = sum(batch == 'A27A'),
batch_A33L = sum(batch == 'A33L'),
batch_A36Y= sum(batch == 'A36Y'),
batch_A39G = sum(batch == 'A39G'))
View(kirc_snf)
View(kirc_hier)
kirc_hier <- kirc_hier %>%
group_by(V1) %>%
summarise(batch_1275 = sum(batch == '1275'),
batch_1418 = sum(batch == '1418'),
batch_1424 = sum(batch == '1424'),
batch_1500 = sum(batch == '1500'),
batch_1536 = sum(batch == '1536'),
batch_1670 = sum(batch == '1670'),
batch_A264 = sum(batch == 'A264'),
batch_A27A = sum(batch == 'A27A'),
batch_A33L = sum(batch == 'A33L'),
batch_A36Y= sum(batch == 'A36Y'),
batch_A39G = sum(batch == 'A39G'))
View(kirc_hier)
library(FDb.InfiniumMethylation.hg19)
library(dplyr)
home_folder <- '/home/benbrew/hpf/largeprojects/agoldenb/ben/Projects/'
project_folder <- paste0(home_folder, '/LFS')
test <- paste0(project_folder, '/Scripts/classification_template')
data_folder <- paste0(project_folder, '/Data')
methyl_data <- paste0(data_folder, '/methyl_data')
clin_data <- paste0(data_folder, '/clin_data')
results_folder <- paste0(test, '/Results')
#################################################################
# Read in cleaned methylation data and match with hm450
#################################################################
# Read in methylation data
methylation <- read.csv(paste0(methyl_data, '/methylation.csv'), header = TRUE, check.names = FALSE)
methylation_tumor <- read.csv(paste0(methyl_data, '/methylation_tumor.csv'), header = TRUE, check.names = FALSE)
View(methylation_tumor)
